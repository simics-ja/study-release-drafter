name: Release Drafter

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build and attach to draft release'
        required: true
        default: 'v0.1.0'
        type: string

permissions:
  contents: read

jobs:
  update_release_draft:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: release-drafter/release-drafter@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_and_attach:
    if: github.event_name == 'workflow_dispatch'
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.2'

      - name: Build binary for Linux
        run: |
          GOOS=linux GOARCH=amd64 go build -o simple-cli-linux-amd64 main.go
          GOOS=linux GOARCH=arm64 go build -o simple-cli-linux-arm64 main.go

      - name: Build binary for macOS
        run: |
          GOOS=darwin GOARCH=amd64 go build -o simple-cli-darwin-amd64 main.go
          GOOS=darwin GOARCH=arm64 go build -o simple-cli-darwin-arm64 main.go

      - name: Build binary for Windows
        run: |
          GOOS=windows GOARCH=amd64 go build -o simple-cli-windows-amd64.exe main.go
          GOOS=windows GOARCH=arm64 go build -o simple-cli-windows-arm64.exe main.go

      - name: Get latest draft release
        id: get_release
        uses: actions/github-script@v7
        with:
          script: |
            const releases = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 10
            });
            
            const draftRelease = releases.data.find(release => release.draft === true);
            
            if (!draftRelease) {
              throw new Error('No draft release found');
            }
            
            console.log('Found draft release:', draftRelease.tag_name);
            return {
              id: draftRelease.id,
              tag_name: draftRelease.tag_name,
              upload_url: draftRelease.upload_url
            };

      - name: Upload Linux AMD64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./simple-cli-linux-amd64
          asset_name: simple-cli-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload Linux ARM64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./simple-cli-linux-arm64
          asset_name: simple-cli-linux-arm64
          asset_content_type: application/octet-stream

      - name: Upload macOS AMD64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./simple-cli-darwin-amd64
          asset_name: simple-cli-darwin-amd64
          asset_content_type: application/octet-stream

      - name: Upload macOS ARM64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./simple-cli-darwin-arm64
          asset_name: simple-cli-darwin-arm64
          asset_content_type: application/octet-stream

      - name: Upload Windows AMD64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./simple-cli-windows-amd64.exe
          asset_name: simple-cli-windows-amd64.exe
          asset_content_type: application/octet-stream

      - name: Upload Windows ARM64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./simple-cli-windows-arm64.exe
          asset_name: simple-cli-windows-arm64.exe
          asset_content_type: application/octet-stream
